import pyupbit
import matplotlib.pyplot as plt
import time
import pandas as pd


df = pd.read_csv('C:\\Users\\2065930\\PycharmProjects\\PatternAnalysis\\csv file\\raw_data_etc.csv')


def short_trading_for_1percent():
    #0.25% 수익 창출 버전


    # df['close'].plot()
    # plt.show()

    # 1) 매수 일자 판별
    cond = df['high'] >= df['open'] * 1.007
    cnt_buy_possible = len(df.index[cond])
    print("매수 후보 갯수",cnt_buy_possible)

    acc_ror = 1
    sell_date = None
    cnt_buy = 0

    # 2) 매도 조건 탐색 및 수익률 계산
    for buy_date in df.index[cond]:
        if sell_date != None and buy_date <= sell_date:
            continue

        target = df.loc[ buy_date :  ]

        cond = target['high'] >= df.loc[buy_date, 'open'] * 1.007 * 1.02
        sell_candidate = target.index[cond]
        cnt_sell_possible = len(sell_candidate)
        print("매도 후보 갯수" ,cnt_sell_possible)

        if len(sell_candidate) == 0:
            buy_price = df.loc[buy_date, 'open'] * 1.007
            sell_price = df.loc[buy_date, 'open'] * 1.007 * 1.02 * 0.998
            acc_ror *= (sell_price / buy_price)
            break
        else:
            sell_date = sell_candidate[0]
            buy_price = df.loc[buy_date, 'open'] * 1.01
            sell_price = df.loc[sell_date, 'close']
            acc_ror *= (sell_price / buy_price)* 0.998
            # acc_ror *= 1.005
            # 수수료 0.001 + 슬리피지 0.004
            # if sell_price > buy_price:
            print("매수: %s(%s), 매도: %s(%s)," % (buy_price,buy_date, sell_price, sell_date))
            print("중간 정산", acc_ror)
            cnt_buy += 1

    print("수익율", acc_ror)
    print("cnt_buy", cnt_buy)

    return acc_ror

short_trading_for_1percent()
